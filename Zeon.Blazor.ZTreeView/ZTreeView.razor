@namespace Zeon.Blazor.ZTreeView
@using Zeon.Blazor.ZInput
@using Zeon.Blazor.ZTreeView.Constants
@typeparam TValue

<div class="zeon-tree-view-content" style="--background-color:@BackgroundColor">

    @{
        var dragOnEnterGroupClass = GetDragOnEnterGroupClass(null);
    }

    <ul class="@dragOnEnterGroupClass">
        @{
            var dataFiltered = Data.Where(q => q.ParentId is null).Where(_filter).ToArray();
            @for (int index = 0; index < dataFiltered.Length; index++)
            {
                var item = dataFiltered[index];

                string checkBoxClass = GetCheckBoxClassMode(Data, item);
                string expandedClass = GetExpandedClassMode(Data, item);
                string selectedClass = GetSelectedClassMode(item.Id);
                string dragOnEnterTopClass = GetDragOnEnterTopClass(item);
                string dragOnEnterBottomClass = GetDragOnEnterBottomClass(item);
                string dragOnEnterIntoClass = GetDragOnEnterIntoClass(item);

                <div class="zeon-tree-view-item-drop-line @dragOnEnterTopClass" style="--drop-elements-display:@_dropElementsDisplay"
                 @ondragenter="(e)=> OnDragEnterHandler((e,DragToPosition.Top,item))" @ondragenter:stopPropagation=true
                 @ondragleave="(e)=> OnDragLeaveHandler((e,DragToPosition.Top,item))" @ondragleave:stopPropagation=true
                 @ondrop="(e)=> OnDrop(e,DragToPosition.Top,item)" @ondrop:stopPropagation=true
             ondragover="event.preventDefault();" ondragstart="event.dataTransfer.setData('', event.target.id);">
                </div>

                <li id="@GetItemId(item.Id)" class="zeon-tree-view-item">
                    <div class="zeon-tree-view-item-row @selectedClass @dragOnEnterIntoClass"
                     @onclick="()=> SelectedOnClick(item.Id)" @onclick:stopPropagation=true
                 draggable="@DragAndDropIsEnabled.ToString().ToLower()" @ondragstart="(e)=> OnDragStartHandler(e,item)" @ondragstart:stopPropagation=true
                     @ondragend="(e) => OnDragEndHandler(e, item)" @ondragend:stopPropagation=true>

                        <span class="@expandedClass" @onclick="()=> ExpandedOnClick(item.Id)" @onclick:stopPropagation=true></span>
                        @if (ShowCheckedBox)
                        {
                            <span class="@checkBoxClass" @onclick="()=> CheckedOnClick(item.Id)" @onclick:stopPropagation=true></span>
                        }
                        <span class="zeon-tree-view-item-text">@item.Text</span>
                        <span class="zeon-tree-view-item-drop-into" style="--drop-elements-display:@_dropElementsDisplay"
                          @ondragenter="(e)=> OnDragEnterHandler((e,DragToPosition.Into,item))" @ondragenter:stopPropagation=true
                          @ondragleave="(e)=> OnDragLeaveHandler((e,DragToPosition.Into,item))" @ondragleave:stopPropagation=true
                          @ondrop="(e)=> OnDrop(e,DragToPosition.Into,item)" @ondrop:stopPropagation=true ondragover="event.preventDefault();">
                        </span>

                        <div class="zeon-tree-view-item-actions-group">
                            @if (ShowActionButtons.add)
                            {
                                <span class="zeon-tree-view-item-action zf zf-plus" @onclick="(e)=> DataChangeOnClick(item,ChangeState.Add)" @onclick:stopPropagation=true></span>
                            }
                            @if (ShowActionButtons.edit)
                            {
                                <span class="zeon-tree-view-item-action zf zf-edit" @onclick="(e)=> DataChangeOnClick(item,ChangeState.Edit)" @onclick:stopPropagation=true></span>
                            }
                            @if (ShowActionButtons.remove)
                            {
                                <span class="zeon-tree-view-item-action zf zf-delete" @onclick="(e)=> RemoveItemOnClick(item)" @onclick:stopPropagation=true></span>
                            }
                        </div>

                        @if (((item.Id, Constants.ChangeState.Add) == _changeItemState) || ((item.Id, Constants.ChangeState.Edit) == _changeItemState))
                        {
                            <div class="zeon-tree-view-item-ae-inline">
                                <span class="zeon-tree-view-item-input">
                                    <ZInput Type="string" DefaultValue="@(((item.Id, Constants.ChangeState.Edit) == _changeItemState)?item.Text:string.Empty)" OnValueChanged="(value) => OnDataChanged(item,value,_changeItemState.state)"></ZInput>
                                </span>
                                <span class="zeon-tree-view-item-input-cancel zf zf-ballot" @onclick="(e)=> CancelAddEditInlineClick()" @onclick:stopPropagation=true>
                                </span>
                            </div>
                        }
                    </div>

                    @if (item.Expanded && Data.Where(q => q.ParentId == item.Id).Any())
                    {
                        <ChildrenTree Name="@Name" GetItemId="GetItemId" Filter="_filter"
                          GetCheckBoxClassMode="GetCheckBoxClassMode" GetExpandedClassMode="GetExpandedClassMode" GetSelectedClassMode="GetSelectedClassMode"
                          Data="Data" Items="Data.Where(q=> q.ParentId == item.Id).ToList()"
                          CheckedOnClick="CheckedOnClick" ExpandedOnClick="ExpandedOnClick" SelectedOnClick="SelectedOnClick"
                          HandleOnDragEnter="OnDragEnterHandler" HandleOnDragLeave="OnDragLeaveHandler"
                          ShowCheckedBox="ShowCheckedBox"
                          GetDragOnEnterTopClass="GetDragOnEnterTopClass"
                          GetDragOnEnterBottomClass="GetDragOnEnterBottomClass"
                          GetDragOnEnterIntoClass="GetDragOnEnterIntoClass"
                          GetDragOnEnterGroupClass="GetDragOnEnterGroupClass"
                          ItemId="item.Id"
                          DragAndDropIsEnabled="DragAndDropIsEnabled" DropElementsDisplay="@_dropElementsDisplay"
                          OnDropStart="OnDrop" OnDragStart="OnDragStartHandler" OnDragEnd="OnDragEndHandler"
                          ChangeItemState="_changeItemState" OnDataChanged="OnDataChanged"
                          DataChangeOnClick="DataChangeOnClick" RemoveItemOnClick="RemoveItemOnClick"
                          CancelAddEditInlineClick="CancelAddEditInlineClick" ShowActionButtons="ShowActionButtons">
                        </ChildrenTree>
                    }

                </li>


                @if (index == dataFiltered.Length - 1)
                {
                    <div class="zeon-tree-view-item-drop-line @dragOnEnterBottomClass" style="--drop-elements-display:@_dropElementsDisplay"
                 @ondragenter="(e)=> OnDragEnterHandler((e,DragToPosition.Bottom,item))" @ondragenter:stopPropagation=true
                 @ondragleave="(e)=> OnDragLeaveHandler((e,DragToPosition.Bottom,item))" @ondragleave:stopPropagation=true
                 @ondrop="(e)=> OnDrop(e,DragToPosition.Bottom,item)" @ondrop:stopPropagation=true ondragover="event.preventDefault();" ondragstart="event.dataTransfer.setData('', event.target.id);">
                    </div>
                }

            }
        }
    </ul>

</div>
